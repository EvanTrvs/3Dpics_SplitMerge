#ifndef CFragment_h
#define CFragment_h 

#pragma once

#include <math.h>
#include <vector>
#include <boost/multi_array.hpp>

using namespace std;

#include "CGrayScale.h"
#include "CException.h"

#define TAILLE_DIM 1
#define SEUIL_MIN 2

class CFragment {

private:
	boost::multi_array <CGrayScale, 3> * pmaGSLFRGMultiArray;
	vector <unsigned int> vuiFRGConer;
	vector <unsigned int> vuiFRGDimension;

	std::pair <unsigned int, unsigned int> puiFRGMinMax;
	unsigned int uiFRGConnexite;

public:

	/************************************************************************************************************************************************
	***** Default Class Constructor																												*****
	*************************************************************************************************************************************************
	***** Input : None																															*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : None																															*****
	***** Effects : Initialize variables to null / O					                                                                        *****
	************************************************************************************************************************************************/
	CFragment();

	/************************************************************************************************************************************************
	***** Class Constructor																														*****
	*************************************************************************************************************************************************
	***** Input : pmaCLRMultiArray : * boost::multi_array <CGrayScale, 3>, vuiFRGConer et vuiFRGDimension : vector <unsigned int>				*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : None																															*****
	***** Effects : Initialize variables with the provided parameter					                                                        *****
	************************************************************************************************************************************************/
	CFragment(boost::multi_array <CGrayScale, 3> * pmaGSLMultiArray, vector <unsigned int> vuiConer, vector <unsigned int> vuiDimension);

	/****************************************************************************************************************************************************************************************
	***** Class Constructor																																								*****
	*****************************************************************************************************************************************************************************************
	***** Input : pmaCLRMultiArray : * boost::multi_array <CGrayScale, 3>, vuiFRGConer et vuiFRGDimension : vector <unsigned int> | puiMinMax : pair<unsigned int, unsigned int>		*****
	***** Precondition : Nothing																																						*****
	***** Output : None																																									*****
	***** Effects : Initialize variables with the provided parameter																													*****
	****************************************************************************************************************************************************************************************/
	CFragment(boost::multi_array <CGrayScale, 3> * pmaCLRMultiArray, vector <unsigned int> vuiConer, vector <unsigned int> vuiDimension, unsigned int uiNum, std::pair<unsigned int, unsigned int> puiMinMax);

	/************************************************************************************************************************************************
	***** Operator=																																*****
	*************************************************************************************************************************************************
	***** Input : FRGFragment : const & CFragment																								*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : the object itself																											*****
	***** Effects : Initialize variables respectively with FRGFragment's variables 					                                            *****
	************************************************************************************************************************************************/
	CFragment & operator= (CFragment const& FRGFragment);

	/************************************************************************************************************************************************
	***** Class Copie Constructor																												*****
	*************************************************************************************************************************************************
	***** Input : FRGFragment : const & CFragment																								*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : None																															*****
	***** Effects : Initialize variables respectively with FRGFragment's variables 					                                            *****
	************************************************************************************************************************************************/
	CFragment(CFragment const& FRGFragment);

	/************************************************************************************************************************************************
	***** FRGGetMatrice : Reading Accessor																										*****
	*************************************************************************************************************************************************
	***** Input : None																															*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : pmaGSLFRGMultiArray : boost::multi_array<CGrayScale, 3> *																	*****
	***** Effects : Return variable pmaGSLFRGMultiArray 																						*****
	************************************************************************************************************************************************/
	boost::multi_array<CGrayScale, 3> * FRGGetMatrice();

	/************************************************************************************************************************************************
	***** FRGGetDimensionMatrice : Reading Accessor																								*****
	*************************************************************************************************************************************************
	***** Input : None																															*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : vuiDimMatrice : vector <unsigned int>																						*****
	***** Effects : Return the dimensions of the variable pmaGSLFRGMultiArray 																	*****
	************************************************************************************************************************************************/
	vector <unsigned int> FRGGetDimensionMatrice() const;

	/************************************************************************************************************************************************
	***** FRGGetElement : Reading Accessor																										*****
	*************************************************************************************************************************************************
	***** Input : uiX, uiY, uiZ : unsigned int																									*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : uiElement : unsigned int																										*****
	***** Effects : Return an element of the variable pmaGSLFRGMultiArray 																		*****
	************************************************************************************************************************************************/
	CGrayScale FRGGetElement(unsigned int uiX, unsigned int uiY, unsigned int uiZ) const;

	/************************************************************************************************************************************************
	***** FRGGetCoos : Reading Accessor																											*****
	*************************************************************************************************************************************************
	***** Input : None																															*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : vuiFRGConer : vector <unsigned int>																							*****
	***** Effects : Return variable vuiFRGConer																									*****
	************************************************************************************************************************************************/
	vector <unsigned int> FRGGetCoos() const;

	/************************************************************************************************************************************************
	***** FRGGetDimensions : Reading Accessor																									*****
	*************************************************************************************************************************************************
	***** Input : None																															*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : vuiFRGDimension : vector <unsigned int>																						*****
	***** Effects : Return variable vuiFRGDimension																								*****
	************************************************************************************************************************************************/
	vector <unsigned int> FRGGetDimensions() const;

	/************************************************************************************************************************************************
	***** FRGGetMinMax : Reading Accessor																										*****
	*************************************************************************************************************************************************
	***** Input : None																															*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : puiFRGMinMax : std::pair<unsigned int, unsigned int>																			*****
	***** Effects : Return variable puiFRGMinMax																								*****
	************************************************************************************************************************************************/
	std::pair<unsigned int, unsigned int> FRGGetMinMax() const;

	/************************************************************************************************************************************************
	***** FRGGetMin : Reading Accessor																											*****
	*************************************************************************************************************************************************
	***** Input : None																															*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : uiMin : unsigned int																											*****
	***** Effects : Return variable puiFRGMinMax's first element 																				*****
	************************************************************************************************************************************************/
	unsigned int FRGGetMin() const;

	/************************************************************************************************************************************************
	***** FRGGetMax : Reading Accessor																											*****
	*************************************************************************************************************************************************
	***** Input : None																															*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : uiMax : unsigned int																											*****
	***** Effects : Return variable puiFRGMinMax's second element 																				*****
	************************************************************************************************************************************************/
	unsigned int FRGGetMax() const;

	/************************************************************************************************************************************************
	***** FRGSetMinMax : Writting Accessor																										*****
	*************************************************************************************************************************************************
	***** Input : puiMinMax : std::pair<unsigned int, unsigned int>																				*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : None																															*****
	***** Effects : Modification of the variable puiFRGMinMax 																					*****
	************************************************************************************************************************************************/
	void FRGSetMinMax(std::pair<unsigned int, unsigned int> puiMinMax);

	/************************************************************************************************************************************************
	***** FRGSetMinMax : Writting Accessor																										*****
	*************************************************************************************************************************************************
	***** Input : uiMin, uiMax : unsigned int																									*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : None																															*****
	***** Effects : Modification of the variable puiFRGMinMax 																					*****
	************************************************************************************************************************************************/
	void FRGSetMinMax(unsigned int uiMin, unsigned int uiMax);

	/************************************************************************************************************************************************
	***** FRGSetMin : Writting Accessor																											*****
	*************************************************************************************************************************************************
	***** Input : uiMin : unsigned int																											*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : None																															*****
	***** Effects : Modification of the puiFRGMinMax's first element																			*****
	************************************************************************************************************************************************/
	void FRGSetMin(unsigned int uiMin);

	/************************************************************************************************************************************************
	***** FRGSetMax : Writting Accessor																											*****
	*************************************************************************************************************************************************
	***** Input : uiMax : unsigned int																											*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : None																															*****
	***** Effects : Modification of the puiFRGMinMax's second element 																			*****
	************************************************************************************************************************************************/
	void FRGSetMax(unsigned int uiMax);

	/************************************************************************************************************************************************
	***** FRGGetConnexite : Reading Accessor																									*****
	*************************************************************************************************************************************************
	***** Input : None																															*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : uiFRGConnexite : unsigned int																								*****
	***** Effects : Return variable uiFRGConnexite					 																			*****
	************************************************************************************************************************************************/
	unsigned int FRGGetConnexite() const;

	/************************************************************************************************************************************************
	***** FRGGetConnexite : Reading Accessor																									*****
	*************************************************************************************************************************************************
	***** Input : uiNewConnexite : unsigned int																									*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : None																															*****
	***** Effects : Modification of the variable uiFRGConnexite					 																*****
	************************************************************************************************************************************************/
	void FRGSetConnexite(unsigned int uiNewNConnexite);

	/************************************************************************************************************************************************
	***** FRGHomogeneity : Method for analyze homogeneity																						*****
	*************************************************************************************************************************************************
	***** Input : uiHomogeneite : const unsigned int																							*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : bHomogeneity : boolean																										*****
	***** Effects : Return True/False if the Fragment are uniform or not					 													*****
	************************************************************************************************************************************************/
	bool FRGHomogeneity(const unsigned int uiHomogeneite) const;

	/************************************************************************************************************************************************
	***** FRGHomogeneityV2 : Method for analyze homogeneity																						*****
	*************************************************************************************************************************************************
	***** Input : uiHomogeneite : const unsigned int																							*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : puiMinMax : std::pair<unsigned int, unsigned int> *																			*****
	***** Effects : Return Min/Max if the Fragment are uniform, nullptr else				 													*****
	************************************************************************************************************************************************/
	std::pair<unsigned int, unsigned int> * FRGHomogeneityV2(const unsigned int uiHomogeneite) const;

	/************************************************************************************************************************************************
	***** FRGFindMinMax : Method for return Min/Max																								*****
	*************************************************************************************************************************************************
	***** Input : None																															*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : puiMinMax : std::pair <unsigned int, unsigned int>																			*****
	***** Effects : Return the Min/Max of the Fragment										 													*****
	************************************************************************************************************************************************/
	std::pair<unsigned int, unsigned int> FRGFindMinMax() const ;

	/************************************************************************************************************************************************
	***** FRGIsSplitable : Method for return Direction Possibility of Split																		*****
	*************************************************************************************************************************************************
	***** Input : uiSeuilMin : const unsigned int																								*****
	***** Precondition : Nothing                                                                                                                *****
	***** Output : vbDimSplitable : std::vector<bool>																							*****
	***** Effects : Return boolean for each direction (true if is splitable, false else)										 				*****
	************************************************************************************************************************************************/
	std::vector<bool> FRGIsSplitable(const unsigned int uiSeuilMin) const;

	/************************************************************************************************************************************************************
	***** FRGGetNewSpots : Method for return New Fragment (Coos and Dimensions)																				*****
	*************************************************************************************************************************************************************
	***** Input : vbSplitDim : const std::vector<bool> | vpvuiNewSpots : std::vector< std::pair< std::vector<unsigned int>, std::vector<unsigned int>>> &	*****
	***** Precondition : Nothing																															*****
	***** Output : None																																		*****
	***** Effects : Return boolean for each direction (true if is splitable, false else)										 							*****
	************************************************************************************************************************************************************/
	void FRGGetNewSpots(const std::vector<bool> vbSplitDim, std::vector< std::pair< std::vector<unsigned int>, std::vector<unsigned int>>> & vpvuiNewSpots);

};

#include "CFragment.ipp"

#endif